--------------
1 - Intro - Python Language Foundation
--------------

Q. - Why python language made?
=>
- Python is an a language that not highly theorotical while learning.
- Python is a Code Oriented during written.
- Python are Optimized, bignner friendly, straight forward functionality.
- Not include javascript like odd behaviour & it not like c++ pointer management => these reasons python language provide balance to you.

*NOTE :- Research python behind the scenes.

---------------
2 - Best Way To Install Python 
---------------

- Installation
- Online code
- better options to start the python.


Core python forward going to -
  --> Data science liblaries = Numpys, pandas, matplotlib
  --> Web developement = Diango, API building

===============
|  python.org |   <---- Best way through learn from documentation
===============

Q. - Why Python very straight forward language?
=>
- Python can RUN anywhere, behind the scenes compiler or s/w run this code file it interpret at single place community.
- Python behaviour known, that could not be changed(javascript have problem with behaviour change, when you run on browser or node.)

After Installation python check -
- Recommanding Terminal --> for windows gitbash (it can use to you to run linux commands) => gitbash provide you linux like commands use in terminal.
- Check python is present? => python
- Check python version => python --version
- Python identify as a best stability(not breaking changes when changes version 3.11 to 3.12 to another).

Online python vs Offline python -
- For better programer you have required programming machine for python installation.
- When using online compiler for python practice ---> its same as you can try learn swimming without swimming pool access.
  E.g. Online compiler --> OnlineGDB (but you can't face problem then not become programmer)
  
*NOTE :- Not face any problems, then not become GOOD Programmer.

- Programmer main work is Code Debugging, not is a code writter.

Using Google Colab -
- better for online save code on cloud.
- Better way to view code output.

Recommanding --> Core Python installation & Using VS Code

Use Anaconda 2 versions (almost are notrbooks) -
   --> conda is user friendly for libraries & output better for visualization, AI
   --> all conda used for research oriented work.
   --> conda & mincoda are platform for code writting.
   1] full-fledged Anaconda
   2] Miniconda
   
Steps in VS Code -
-> drag & drop empty folder in VS Code

Python naming convention - 
- python as it self scripting language & also work as full fledged.
- python community prefer underscore for name of file.
  E.g. hello_world.py
  
  print("chai aur python")
 
-> Open terminal in python (in bash) --> Ctrl + ~
-> Run --> python 01_basics/hello_chai.py

Run successfully show all work correct & in system all files installed safely.

Stands out some questions after write below code -
E.g.  -

print("chai aur python")

def chai(n):
      print(n)

chai("lemon tea")


----------- after RUN hello_chai.py -------

make another file chai.py
E.g. -

# method call from this chai.py

from hello_chai import chai

chai("ginger tea")

----------- after RUN chai.py file -------

Q. - Why automatic create "__pycache__" folder & whats work of "__pycache__" folder?


